def longestPrefixSuffix(s) : 
    n = len(s) 
    lps = [0] * n   # lps[0] is always 0 
   
    # length of the previous 
    # longest prefix suffix 
    l = 0 
      
    # the loop calculates lps[i] 
    # for i = 1 to n-1 
    i = 1 
    while (i < n) : 
        if (s[i] == s[l]) : 
            l = l + 1
            lps[i] = l 
            i = i + 1
          
        else  :
        # Also, note that we do 
                # not increment i here 
              
            else : 
  
                # if (len == 0) 
                lps[i] = 0
                i = i + 1
   
    res = lps[n-1] 
   
    # Since we are looking for 
    # non overlapping parts. 
    if(res > n/2) : 
        return n//2 
    else :  
        return res 
          
   
# Driver program to test above function 
s = "abcab"
print(longestPrefixSuffix(s)) 
